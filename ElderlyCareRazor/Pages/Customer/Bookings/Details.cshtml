@page
@model ElderlyCareRazor.Pages.Customer.Bookings.DetailsModel
@{
    ViewData["Title"] = "Booking Details";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Booking Details</h2>
        <a href="/Customer/Bookings/Index" class="btn btn-outline-primary">Back to List</a>
    </div>

    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Booking != null)
    {
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Booking #@Model.Booking.BookingId</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5>Service Information</h5>
                        <dl class="row">
                            <dt class="col-sm-4">Service:</dt>
                            <dd class="col-sm-8">@Model.Service?.ServiceName</dd>

                            <dt class="col-sm-4">Category:</dt>
                            <dd class="col-sm-8">@Model.ServiceCategory?.CategoryName</dd>

                            <dt class="col-sm-4">Price:</dt>
                            <dd class="col-sm-8">$@Model.Service?.Price.ToString("0.00")</dd>

                            <dt class="col-sm-4">Elder:</dt>
                            <dd class="col-sm-8">@Model.Elder?.Fullname</dd>
                        </dl>
                    </div>

                    <div class="col-md-6">
                        <h5>Appointment Details</h5>
                        <dl class="row">
                            <dt class="col-sm-4">Status:</dt>
                            <dd class="col-sm-8">
                                <span class="badge @Model.GetStatusBadgeClass()">@Model.Booking.Status</span>
                            </dd>

                            <dt class="col-sm-4">Date:</dt>
                            <dd class="col-sm-8">
                                @(Model.BookingTimeSlot != null ? Model.BookingTimeSlot.BookingDate.ToString("dddd, MMMM d, yyyy") : "N/A")
                            </dd>

                            <dt class="col-sm-4">Time:</dt>
                            <dd class="col-sm-8">
                                @if (Model.BookingTimeSlot != null)
                                {
                                    <span>@Model.BookingTimeSlot.StartTime.ToString(@"hh\:mm tt") - @Model.BookingTimeSlot.EndTime.ToString(@"hh\:mm tt")</span>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </dd>

                            <dt class="col-sm-4">Caregiver:</dt>
                            <dd class="col-sm-8">@Model.Caregiver?.Account?.Fullname</dd>

                            <dt class="col-sm-4">Created:</dt>
                            <dd class="col-sm-8">@Model.Booking.BookingDateTime.ToString("MM/dd/yyyy hh:mm tt")</dd>

                            @if (Model.Booking.Status == "rejected")
                            {
                                <dt class="col-sm-4">Rejection Reason:</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.Booking.RejectionReason) ? "No reason provided" : Model.Booking.RejectionReason)</dd>
                            }
                        </dl>
                    </div>
                </div>

                @if (Model.Record != null)
                {
                    <div class="mt-4 pt-3 border-top">
                        <h5>Service Record</h5>
                        <dl class="row">
                            <dt class="col-sm-3">Status:</dt>
                            <dd class="col-sm-9">
                                <span class="badge @Model.GetRecordStatusBadgeClass()">@Model.Record.Status</span>
                            </dd>

                            @if (Model.Record.ClockInTime.HasValue)
                            {
                                <dt class="col-sm-3">Clock In:</dt>
                                <dd class="col-sm-9">@Model.Record.ClockInTime.Value.ToString("MM/dd/yyyy hh:mm tt")</dd>
                            }

                            @if (Model.Record.ClockOutTime.HasValue)
                            {
                                <dt class="col-sm-3">Clock Out:</dt>
                                <dd class="col-sm-9">@Model.Record.ClockOutTime.Value.ToString("MM/dd/yyyy hh:mm tt")</dd>
                            }

                            @if (!string.IsNullOrEmpty(Model.Record.ExerciseGuidelines))
                            {
                                <dt class="col-sm-3">Exercise Guidelines:</dt>
                                <dd class="col-sm-9">@Model.Record.ExerciseGuidelines</dd>
                            }

                            @if (!string.IsNullOrEmpty(Model.Record.DietGuidelines))
                            {
                                <dt class="col-sm-3">Diet Guidelines:</dt>
                                <dd class="col-sm-9">@Model.Record.DietGuidelines</dd>
                            }

                            @if (!string.IsNullOrEmpty(Model.Record.OtherGuidelines))
                            {
                                <dt class="col-sm-3">Other Guidelines:</dt>
                                <dd class="col-sm-9">@Model.Record.OtherGuidelines</dd>
                            }

                        </dl>
                    </div>
                }

                @if (Model.Feedback != null)
                {
                    <div class="mt-4 pt-3 border-top">
                        <h5>Your Feedback</h5>
                        <div class="card">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label">Overall Rating</label>
                                            <div>
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="bi bi-star@(i <= Model.Feedback.Rating ? "-fill" : "") text-warning"></i>
                                                }
                                                <span class="ms-2">@Model.Feedback.Rating / 5</span>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">Caregiver Professionalism</label>
                                            <div class="progress">
                                                <div class="progress-bar bg-success" role="progressbar" style="width: @(Model.Feedback.CaregiverProfessionalism * 20)%"
                                                     aria-valuenow="@Model.Feedback.CaregiverProfessionalism" aria-valuemin="0" aria-valuemax="5">
                                                    @Model.Feedback.CaregiverProfessionalism / 5
                                                </div>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">Service Quality</label>
                                            <div class="progress">
                                                <div class="progress-bar bg-info" role="progressbar" style="width: @(Model.Feedback.ServiceQuality * 20)%"
                                                     aria-valuenow="@Model.Feedback.ServiceQuality" aria-valuemin="0" aria-valuemax="5">
                                                    @Model.Feedback.ServiceQuality / 5
                                                </div>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">Overall Experience</label>
                                            <div class="progress">
                                                <div class="progress-bar bg-primary" role="progressbar" style="width: @(Model.Feedback.OverallExperience * 20)%"
                                                     aria-valuenow="@Model.Feedback.OverallExperience" aria-valuemin="0" aria-valuemax="5">
                                                    @Model.Feedback.OverallExperience / 5
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <label class="form-label">Comments</label>
                                        <div class="border rounded p-3 bg-light">
                                            @(string.IsNullOrEmpty(Model.Feedback.Note) ? "No comments provided." : Model.Feedback.Note)
                                        </div>
                                        @* <div class="mt-2 text-muted text-end">
                                            <small>Submitted on @Model.Feedback.FeedbackDate.ToString("MM/dd/yyyy hh:mm tt")</small>
                                        </div> *@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="mt-4 border-top pt-3">
                    <div class="d-flex justify-content-between">
                        @if (Model.CanBeCancelled)
                        {
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#cancelModal">
                                Cancel Booking
                            </button>
                        }
                        else
                        {
                            <div></div> <!-- Empty div to maintain flex layout -->
                        }

                        @if (Model.Booking.Status == "completed" && Model.Feedback == null)
                        {
                            <a href="/Customer/Feedback/Create?bookingId=@Model.Booking.BookingId" class="btn btn-primary">
                                Leave Feedback
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Cancel Booking Modal -->
        @if (Model.CanBeCancelled)
        {
            <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="cancelModalLabel">Cancel Booking</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to cancel this booking?</p>
                            <p class="text-danger">This action cannot be undone.</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <form method="post" asp-page-handler="CancelBooking">
                                <input type="hidden" name="id" value="@Model.Booking.BookingId" />
                                <button type="submit" class="btn btn-danger">Cancel Booking</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-danger">
            <h4 class="alert-heading">Booking Not Found</h4>
            <p>The booking you are looking for does not exist or you don't have permission to view it.</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Flash success message if exists
            let successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                let alertHtml = '<div class="alert alert-success alert-dismissible fade show" role="alert">' +
                    successMessage +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                    '</div>';
                $('.container').prepend(alertHtml);

                // Auto-dismiss after 5 seconds
                setTimeout(function () {
                    $('.alert').alert('close');
                }, 5000);
            }

            // Initialize Bootstrap components
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
        });
    </script>
}